// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Plana.Web.Pages.plan.study_director
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Code\PLANA\planning-of-the-assignments-for-lecturers-plana\1PlanaSolution\Plana.Web\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Code\PLANA\planning-of-the-assignments-for-lecturers-plana\1PlanaSolution\Plana.Web\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Code\PLANA\planning-of-the-assignments-for-lecturers-plana\1PlanaSolution\Plana.Web\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Code\PLANA\planning-of-the-assignments-for-lecturers-plana\1PlanaSolution\Plana.Web\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Code\PLANA\planning-of-the-assignments-for-lecturers-plana\1PlanaSolution\Plana.Web\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Code\PLANA\planning-of-the-assignments-for-lecturers-plana\1PlanaSolution\Plana.Web\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Code\PLANA\planning-of-the-assignments-for-lecturers-plana\1PlanaSolution\Plana.Web\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Code\PLANA\planning-of-the-assignments-for-lecturers-plana\1PlanaSolution\Plana.Web\_Imports.razor"
using Plana.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Code\PLANA\planning-of-the-assignments-for-lecturers-plana\1PlanaSolution\Plana.Web\_Imports.razor"
using Plana.Web.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Code\PLANA\planning-of-the-assignments-for-lecturers-plana\1PlanaSolution\Plana.Web\_Imports.razor"
using Plana.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Code\PLANA\planning-of-the-assignments-for-lecturers-plana\1PlanaSolution\Plana.Web\_Imports.razor"
using Plana.Web.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Code\PLANA\planning-of-the-assignments-for-lecturers-plana\1PlanaSolution\Plana.Web\Pages\plan\study_director\EditPlan.razor"
using MatBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Code\PLANA\planning-of-the-assignments-for-lecturers-plana\1PlanaSolution\Plana.Web\Pages\plan\study_director\EditPlan.razor"
using Plana.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Code\PLANA\planning-of-the-assignments-for-lecturers-plana\1PlanaSolution\Plana.Web\Pages\plan\study_director\EditPlan.razor"
using Plana.Web.Pages.plan.study_director;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Code\PLANA\planning-of-the-assignments-for-lecturers-plana\1PlanaSolution\Plana.Web\Pages\plan\study_director\EditPlan.razor"
using Microsoft.Extensions.Logging;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/editplan/{id}")]
    [Microsoft.AspNetCore.Components.RouteAttribute("/editplan")]
    public partial class EditPlan : EditPlanBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 467 "C:\Code\PLANA\planning-of-the-assignments-for-lecturers-plana\1PlanaSolution\Plana.Web\Pages\plan\study_director\EditPlan.razor"
       

    #region variables
    string request { get; set; } = "R";
    bool loadFailed;
    #endregion


    /// <summary>
    /// js code for button
    ///
    ///  </summary>

    //protected override async void OnAfterRender(bool firstRender)
    //{
    //    await js.InvokeVoidAsync("renderjQueryComponents");
    //    base.OnAfterRender(firstRender);
    //    await js.InvokeVoidAsync("SetButtonsVisible");

    //}

    private async Task CallJSMethod()
    {

        //await JS.InvokeVoidAsync("CollapseTableRow");
        await js.InvokeVoidAsync("GetName");

    }
    private async Task CallJSMethod2()
    {
        await js.InvokeVoidAsync("SetButtonsVisible");
    }

    #region Last Year Plan
    

    #endregion
    #region Dialog Box Methods for Last Year Plan
    bool _isDelete = false;
    bool dialogIsOpen = false;
    bool _isEdit = false;
    private void OpenDialog(bool isEdit)
    {

        //if (!_isEdit) plan = new Plan();
        dialogIsOpen = true;
    }
    private void okCklick()
    {
        dialogIsOpen = false;

    }
    private void CloseDialog()
    {
        dialogIsOpen = false;
        LdialogIsOpen = false;
        dialogIsOpenM = false;
        dialogIsOpenMNew = false;

    }
    #endregion

    #region dialog for lecturers

    bool LdialogIsOpen = false;
    bool _isEditL = false;
    LecturerModuleRunDto newLmr = new LecturerModuleRunDto();
    ModuleRunDto SelectedMR { get; set; }
    public int ModuleRunId;
    private string ErrorMessage { get; set; }

    public ModuleRunDto choosedModuleRun = new ModuleRunDto();
    [Parameter]
    public int moduleRunIdChoosed { get; set; }

    private async Task OpenLecturerDialog(bool isEditL, int choosedModuleRunId)
    {
        moduleRunIdChoosed = choosedModuleRunId;
        choosedModuleRun = await moduleRunService.GetModuleRun(moduleRunIdChoosed);
        _isEditL = isEditL;
        LdialogIsOpen = true;
    }

    private void okClickL()
    {
        LdialogIsOpen = false;
    }

    private void LCloseDialog()
    {
        LdialogIsOpen = false;
    }

    async Task addLecturer(int moduleRunId, int lecturerId)
    {
        try
        {
            LecturerModuleRunDto lecturerModuleRun = new LecturerModuleRunDto()
            {
                LecturerId = lecturerId,
                ModuleRunId = moduleRunId
            };

            var result = await LecturerModuleRunService.CreateLecturerModuleRun(lecturerModuleRun);
            if (result.ErrorMessage != null)
            {
                ErrorMessage = result.ErrorMessage;
            }
            else
            {
                LdialogIsOpen = false;
            }
        }
        catch (Exception ex)
        {
            loadFailed = true;
            Logger.LogWarning(ex, "The selected Lecturer is already addet to this module");
        }
    }
    #endregion
    #region lecturer module Run
    //[Parameter]
    //public int tempModuleRunId { get; set; }
    //LecturerModuleRunDto tempLecturerModuleRun { get; set; } = new LecturerModuleRunDto();

    //[Parameter]
    //public int tempLecturerId { get; set; }
    //public async Task DeleteLecturerModuleRun(int localMRId, int localLId) 
    //{
    //    tempLecturerModuleRun = await LecturerModuleRunService.GetLecturerModuleRun(tempModuleRunId, tempLecturerId);
    //    bool isConfirm = await js.InvokeAsync<bool>("confirm", "do you want to remove selected lecturer?");

    //    tempModuleRunId = localMRId;
    //    tempLecturerId = localLId;
    //    if (isConfirm)
    //    {
    //        await LecturerModuleRunService.DeleteLecturerModuleRun(tempLecturerModuleRun.ModuleRunId, tempLecturerModuleRun.LecturerId);

    //    }
    //}

    #endregion
    #region moduleRun

    string labelName1 = "setEditable";
    string labelName2 = "Disable";


    string ChangeLabel(bool val)
    {
        return !val ? labelName1 : labelName2;
    }

    [Inject]
    public IModuleRunService moduleRunService { get; set; }

    ModuleRunDto moduleRun = new ModuleRunDto();
    ModuleRunDto SelectedModuleRun { get; set; } = new ModuleRunDto();
    bool dialogIsOpenM = false;
    bool dialogIsOpenMNew = false;
    bool _isEditM = false;

    bool snackBarM = false;

    #region Methods



    private void DeleteModuleRun()
    {

        snackBarM = true;
    }
    #endregion

    #region Dialog Box Methods
    private async Task OpenDialogM(bool isEditM, int choosedModuleRunId)
    {
        moduleRunIdChoosed = choosedModuleRunId;
        choosedModuleRun = await moduleRunService.GetModuleRun(moduleRunIdChoosed);



        _isEditM = isEditM;
        dialogIsOpenM = true;
    }
    private void OpenDialogMNew(bool isEditM)
    {
        _isEditM = isEditM;
        dialogIsOpenMNew = true;
    }
    private async void okClickM()
    {
        dialogIsOpenM = false;
        dialogIsOpenMNew = false;
        //if (moduleRun.ModuleRunId != 0)
        //{
        //    await ModuleRunService.UpdateModuleRun(moduleRun);
        //}
        //else {
        //    moduleRun = await ModuleRunService.CreateModuleRun(moduleRun);
        //}

        await ModuleRunService.UpdateModuleRun(choosedModuleRun);

    }
    async Task addModuleRun()
    {
        await ModuleRunService.CreateModuleRun(moduleRun);
        CloseDialogM();
    }
    private void CloseDialogM()
    {
        dialogIsOpenM = false;
        dialogIsOpenMNew = false;
        dialogIsOpenMNew = false;

    }

    #endregion
    #region Additional Assigmment

    #endregion
    #endregion

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime js { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ILogger<EditPlan> Logger { get; set; }
    }
}
#pragma warning restore 1591
