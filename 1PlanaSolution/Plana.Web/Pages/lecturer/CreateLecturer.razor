@page "/createlecturer";
@using Plana.Shared;

@inject NavigationManager navmanager;

<h3>Create Lecturer</h3>

<EditForm Model="@lecturer" OnValidSubmit="@Create">
    <DataAnnotationsValidator />
    <div class="form-field">
        <label>First Name:</label>
        <div>
            <InputText @bind-Value="@lecturer.FirstName" />
            <ValidationMessage For="@(() => lecturer.FirstName)" />
        </div>
    </div>
    <div class="form-field">
        <label>Last Name:</label>
        <div>
            <InputText @bind-Value="@lecturer.LastName" />
            <ValidationMessage For="@(() => lecturer.LastName)" />
        </div>
    </div>
    <div class="form-field">
        <label>Last Token:</label>
        <div>
            <InputText @bind-Value="@lecturer.Token" />
            <ValidationMessage For="@(() => lecturer.Token)" />
        </div>
    </div>
    <div class="form-field">
        <label>Email :</label>
        <div>
            <InputText @bind-Value="@lecturer.Email" />
            <ValidationMessage For="@(() => lecturer.Email)" />
        </div>
    </div>
    <div class="cols-sm-10">

        <InputSelect @bind-Value="@lecturer.Role">
            @foreach (var role in Enum.GetValues(typeof(RoleDto)))
            {
                <option value="@role">@role</option>
            }
        </InputSelect>

    </div>
    <button type="submit" class="btn-btn-success">
        Create Lecturer
    </button>
</EditForm>

@code {
    @using Plana.Web.Services;
    @using Plana.Models;


    [Inject]
    public ILecturerService LecturerService { get; set; }

    LecturerDto lecturer = new LecturerDto();

    async Task Create()
    {
       
        
        lecturer = await LecturerService.CreateLecturer(lecturer);
        navmanager.NavigateTo("/lecturers");
    }

    
}
