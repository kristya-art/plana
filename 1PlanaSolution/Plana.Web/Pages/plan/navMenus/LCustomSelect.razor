@page "/lcustomSelect"
@*<EditForm Model="@Plan">*@
@if (Plans == null)
{ return; }
<form>
    <select class="form-control" @bind="SelectedPlan.Id">

        @foreach (var plan in Plans)
        {
            <option value="@plan.Id">
                @plan.Year
            </option>
        }
    </select>
    <div class="btn-group">
        <button @onclick="NavigateToModulesPlanPage">
            show plan
            @*<a href="@($"/editplan/{SelectedPlan.Id}")">show plan</a>*@

        </button>
        @*<button>show last year plan</button>*@
    </div>
</form>

@*<MatFAB Icon="@MatIconNames.Add" Label="@SelectedPlan.Year">

        <a href="@($"/editplan/{SelectedPlan.Id}")">show</a>
    </MatFAB>*@



@code {

    [Inject]
    public NavigationManager NavManager { get; set; }
    [Inject]
    public IPlanService PlanService { get; set; }
    [Parameter]
    public Plan Plan { get; set; } = new Plan();
    [Parameter]
    public Plan SelectedPlan { get; set; } = new Plan();
    //public Plan SelectePlanForShow { get; set; } = new Plan();
    public List<Plan> Plans { get; set; }



    public string Id { get; set; }

    //protected async override Task OnInitializedAsync()
    //{


    //    Plans = (await PlanService.GetPlans()).ToList();

    //}
    //#region method
    public void NavigateToModulesPlanPage()
    {
        string Id = Plan.Id.ToString();
        NavManager.NavigateTo($"/editplan/{SelectedPlan.Id}", true);
    }




    #region   // for lCustomSelect
    //[Inject]
    //public PlanLecturerService planLecturerService { get; set; }
    //public PlanLecturer PlanLct { get; set; }
    //public Lecturer Lecturer { get; set; } = new Lecturer();

    //public PlanLecturer SelectedPlanLecturer { get; set; } = new PlanLecturer();

    //public List<PlanLecturer> PlanLecturers { get; set; } = new List<PlanLecturer>();

    //public string PlanLectPlanId { get; set; }
    //public string PlanLectLectId { get; set; }

    //protected void override Task OnInizialiedAsync()
    //{
    //    PlanLecturers = (await planLecturersService.GetPlanLecturers());
    //}
    #endregion

}

<style>
    form {
        padding: 2px;
    }

    input {
        /* And hide the input's outline, so the form looks like the outline */
        border: none;
    }


   
   
</style>

