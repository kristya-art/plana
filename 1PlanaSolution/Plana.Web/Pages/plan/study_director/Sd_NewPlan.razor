@page "/sd_NewPlan"
@using MatBlazor;


<Plana.Web.Pages.template_components.SdNavBar />

<MatButton Outlined="true" @onclick="@(e=>OpenDialog(false))">Add new Plan</MatButton>
<hr />
<EditForm Model="@plan" OnValidSubmit="@Create">


   <MatDialog  @bind-IsOpen="dialogIsOpen">
        <MatDialogTitle>Add Plan</MatDialogTitle>
        <MatDialogContent Style="width: 500px;right:50px">
            <div class="form-field">
                <label>Plan Year:</label>
                <div>
                    <InputText @bind-Value="@plan.Year" />
                </div>
            </div>
            <div class="form-field">
                <label>Publish Date:</label>
                <div>
                    <InputDate placeholder="Publish Date" @bind-Value="@plan.OfficialPublishDate" />
                </div>
            </div>
            <div class="form-field">
                <label>Share with Professors Date:</label>
                <div>
                    <InputDate placeholder="Share Date" @bind-Value="@plan.PublishDateForProfessors" />
                </div>
            </div>
            <div class="form-field">
                <label>Expired Date:</label>
                <div>
                    <InputDate placeholder="Expired Date" @bind-Value="@plan.ExpiredDate" />
                </div>
            </div>
            <div class="form-field">
                <label>Set plan Fix:</label>
                <div>
                    <MatCheckbox @bind-Value="@plan.IsFixed"></MatCheckbox>
                </div>
            </div>
            <div class="form-field">
                <label>Autumn Semester code:</label>
                <div>
                    <InputText @bind-Value="@Asemester.Code" />
                </div>
            </div>
            <div class="form-field">
                <label>Spring Semester code:</label>
                <div>
                    <InputText @bind-Value="@Ssemester.Code" />
                </div>
            </div>
            @*<EditForm  Model="@Asemester" OnValidSubmit="@CreateASemester">
            <div class="form-field">
                <label>Autumn Semester Code:</label>
                <div>
                    <InputText @bind-Value="@Asemester.Code" />
                </div>
            </div>

        </EditForm>*@

            @* <MatTextField Label="Plan Year" @bind-Value="@plan.Year"></MatTextField>
        <MatTextField Label="Plan isFixed" @bind-Value="@plan.IsFixed"></MatTextField>
        <MatTextField Label="Autumn Semester" @bind-Value="@plan.AutumnSemester.Code"></MatTextField>
        <MatTextField Label="Spring Semester" @bind-Value="@plan.SpringSemester.Code"></MatTextField>
            *@

        </MatDialogContent>
            <button type="submit" class="btn-btn-success">
                Create Plan
            </button>
        </MatDialog>
</EditForm>

<MatButton Raised="true" @onclick="@(e=>OpenDialog(true))" Icon="edit" title="Edit Employee"></MatButton>
@*<MatButton Raised="true" @onclick="DeleteEmployee" Icon="restore_from_trash" title="Delete Employee"></MatButton>*@
@code {

    Plan selectedPlan = null;
    Plan tempPlan = null;
    bool _isDelete = false;
    bool dialogIsOpen = false;
    bool _isEdit = false;

    bool snackBar = false;





    #region Methods

    #endregion

    #region Dialog Box Methods
    private void OpenDialog(bool isEdit)
    {
        _isEdit = isEdit;
        //if (!_isEdit) plan = new Plan();
        dialogIsOpen = true;
    }
    private void okCklick()
    {
        dialogIsOpen = false;

    }
    private void CloseDialog()
    {
        dialogIsOpen = false;
        if (selectedPlan != null)
        {
            plan = selectedPlan;
            //this.EditPlan(selectedPlan);
        }
    }
    #endregion

    [Inject]
    public IPlanService PlanService { get; set; }
    [Inject]
    public ISemesterService SemesterService { get; set; }
    [Inject]
    public NavigationManager NavManager { get; set; }

    Plan plan{ get; set; } = new Plan();




    Semester Ssemester{ get; set; } = new Semester();

    //async Task CreateSSemester()
    //{
    //    Ssemester = await SemesterService.CreateSemester(Ssemester);
    //}
    Semester Asemester { get; set; } = new Semester();

    //async Task CreateASemester()
    //{
    //    Asemester = await SemesterService.CreateSemester(Asemester);
    //}

    async Task Create()
    {



        plan.SpringSemester = Ssemester;

        plan.AutumnSemester = Asemester;


        plan = await PlanService.CreatePlan(plan);
        //await SemesterService.UpdateSemester(plan.SpringSemester);
        //await SemesterService.UpdateSemester(plan.AutumnSemester);
        NavManager.NavigateTo($"/editplan/{plan.Id}", true);
        dialogIsOpen = false;
    }
}
