@page "/editplan/{id}"
@page "/editplan"
@using MatBlazor;
@*@using Plana.Models;*@
@using Plana.Web.Pages.plan.study_director;

@inject IJSRuntime js

@inherits EditPlanBase
@if (Plan == null || Plans == null) { return; }


<Plana.Web.Pages.template_components.CustomSelect/>

    <div class="btn-group">
        <button id="addNewModule" @onclick="@(e=>OpenModuleDialog(false))" style="float: right;">Add Module</button>
        <button @onclick="@(e=>OpenDialog(false))" style="float: right;">last year plan</button>
    </div>

    <div class="btn-groupR">
        <button>Share with professors on @Plan.PublishDateForProfessors </button>
        <button>Official publish on @Plan.OfficialPublishDate</button>

    </div>

    @*<button class="btn btn-primary" @onclick="CallJSMethod">show</button>*@


@*Modules Table*@

@if (Plan == null)
{
    <text>Loading...</text>
}
else
{

    @*<table class="table" itemscope="@Plan" itemid="@Plan.Id">*@
    <table class="table">
        <thead>
            <tr>


                <th>Semester</th>
                <th>Module</th>
                <th>Module Title</th>
                <th>Module-Group</th>
                <th>Place</th>
                <th>Module Total Hours</th>
                <th>Lecturers Group</th>
                <th>Lecturers</th>
                <th>Set Lecturers hours</th>
                <th>Actions</th>
                <th>notes</th>
            </tr>

        </thead>
        <tbody>

            @if (Semesters != null)
            {


                @foreach (var sem in Semesters)
                {

                    @*flix it , the problem is that when the sem == null, program is break up*@
                    @if (sem.ModuleRuns == null) { return; }


                    @if (sem.ModuleRuns == null) { return; }
                    @foreach (var mr in sem.ModuleRuns)
                    {
                        <tr>
                            <td>

                                <button contenteditable="true">
                                    @mr.Module.Title
                                </button>

                            </td>
                        </tr>

                        <tr>
                            <td>@sem.GetAbbreviation()</td>

                            <td contenteditable='true'>@mr.Module.Code</td>
                            <td>@mr.Module.Title</td>
                            <td>@mr.ModuleGroup</td>
                            <td contenteditable="true">@mr.Place</td>
                            <td contenteditable="true">@mr.Module.TotalHours</td>
                            <td>

                                @if (mr.ModuleRunLecturerGroups != null)
                                {

                                    @foreach (var lg in mr.ModuleRunLecturerGroups)
                                    {
                                        <p style="white-space:nowrap;">
                                            @lg.LecturerGroup.Title
                                            <button class="btn" id="del"><i class="fa fa-close"></i></button>
                                        </p>
                                    }
                                }
                                <button class="btn" id="add"><i class="fa fa-plus"></i></button>
                            </td>

                            @if (mr.LecturersMR != null)
                            {

                                <td style="white-space:nowrap;">

                                    <div id="scroll">
                                        @foreach (var lm in mr.LecturersMR)
                                        {
                                            <p style="white-space:nowrap;">
                                                @lm.Lecturer.SetToken() | @lm.Hours
                                                <button class="btn" disabled id="del"><i class="fa fa-close"></i></button>
                                            </p>


                                        }
                                        <button class="btn" id="add"><i class="fa fa-plus"></i></button>
                                    </div>
                                </td>
                                <td contenteditable='true'>
                                    @foreach (var lm in mr.LecturersMR)
                                    {

                                        <p contenteditable='true'> @lm.Hours</p>

                                    }
                                </td>
                            }
                            <td style="white-space:nowrap;" @onclick="CallJSMethod2">
                                <button class="btn" id="edit-btn">edit</button>
                                <button class="btn" id="save-btn">save lecturerModuleRun</button>
                                <button class="btn" id="save-btn">save</button>
                                <button class="btn" id="delete-btn">delete module</button>
                                <button class="btn" id="cancel-btn">cancel</button>
                                <MatButton Raised="true" @onclick="HandleValidSubmit" Icon="save" title="Save"></MatButton>


                            </td>
                            <td><textarea>...</textarea></td>

                            @*in case of making row large*@
                            @*<td width="500" height="300">
                                    <div style="width: 500px; height: 300px; overflow: auto">
                                        lots of data that exceeds the dimensions
                                    </div>
                                </td>*@

                        </tr>

                    }

                }

                @*<a class="btn btn-success">Edit</a>
                    <button class="btn btn-danger">Delete</button>*@


            }


        </tbody>
    </table>





}
@*dialog for last year plan *@
<MatDialog @bind-IsOpen="dialogIsOpen">
    <MatDialogTitle>Add Plan</MatDialogTitle>
    <MatDialogContent Style="width: 750px;right:50px">
        @if (Plan == null)
        {
            <text>Loading...</text>
        }
        else
        {

            @*<table class="table" itemscope="@Plan" itemid="@Plan.Id">*@
            <table class="table">
                <thead>
                    <tr>


                        <th>Semester</th>
                        <th>Module</th>
                        <th>Module Title</th>
                        <th>Module-Group</th>
                        <th>Place</th>
                        <th>Module Total Hours</th>
                        <th>Lecturers Group</th>
                        <th>Lecturers</th>
                        <th>Set Lecturers hours</th>
                        <th>Actions</th>
                        <th>notes</th>
                    </tr>

                </thead>
                <tbody>

                    @if (Semesters != null)
                    {


                        @foreach (var sem in Semesters)
                        {

                            @*flix it , the problem is that when the sem == null, program is break up*@
                            @if (sem.ModuleRuns == null) { return; }


                            @if (sem.ModuleRuns == null) { return; }
                            @foreach (var mr in sem.ModuleRuns)
                            {
                                <tr>
                                    <td>

                                        <button contenteditable="true">
                                            @mr.Module.Title
                                        </button>

                                    </td>
                                </tr>

                                <tr>
                                    <td>@sem.GetAbbreviation()</td>

                                    <td contenteditable='true'>@mr.Module.Code</td>
                                    <td>@mr.Module.Title</td>
                                    <td>@mr.ModuleGroup</td>
                                    <td contenteditable="true">@mr.Place</td>
                                    <td contenteditable="true">@mr.Module.TotalHours</td>
                                    <td>

                                        @if (mr.ModuleRunLecturerGroups != null)
                                        {

                                            @foreach (var lg in mr.ModuleRunLecturerGroups)
                                            {
                                                <p style="white-space:nowrap;">
                                                    @lg.LecturerGroup.Title
                                                    <button class="btn" id="del"><i class="fa fa-close"></i></button>
                                                </p>
                                            }
                                        }
                                        <button class="btn" id="add"><i class="fa fa-plus"></i></button>
                                    </td>

                                    @if (mr.LecturersMR != null)
                                    {

                                        <td style="white-space:nowrap;">

                                            <div id="scroll">
                                                @foreach (var lm in mr.LecturersMR)
                                                {
                                                    <p style="white-space:nowrap;">
                                                        @lm.Lecturer.SetToken() | @lm.Hours
                                                        <button class="btn" disabled id="del"><i class="fa fa-close"></i></button>
                                                    </p>


                                                }
                                                <button class="btn" id="add"><i class="fa fa-plus"></i></button>
                                            </div>
                                        </td>
                                        <td contenteditable='true'>
                                            @foreach (var lm in mr.LecturersMR)
                                            {

                                                <p contenteditable='true'> @lm.Hours</p>

                                            }
                                        </td>
                                    }
                                    <td style="white-space:nowrap;" @onclick="CallJSMethod2">
                                        <button class="btn" id="edit-btn">edit</button>
                                        <button class="btn" id="save-btn">save lecturerModuleRun</button>
                                        <button class="btn" id="save-btn">save</button>
                                        <button class="btn" id="delete-btn">delete module</button>
                                        <button class="btn" id="cancel-btn">cancel</button>
                                        <MatButton Raised="true" @onclick="HandleValidSubmit" Icon="save" title="Save"></MatButton>


                                    </td>
                                    <td><textarea>...</textarea></td>

                                    @*in case of making row large*@
                                    @*<td width="500" height="300">
                                            <div style="width: 500px; height: 300px; overflow: auto">
                                                lots of data that exceeds the dimensions
                                            </div>
                                        </td>*@

                                </tr>

                            }

                        }

                        @*<a class="btn btn-success">Edit</a>
                            <button class="btn btn-danger">Delete</button>*@


                    }


                </tbody>
            </table>





        }

    </MatDialogContent>
    <button type="submit" class="btn-btn-success">
        Copy to actual
    </button>
</MatDialog>


@*Dialog for the making a new module*@
<EditForm Model="@ModuleRun" OnInvalidSubmit="@CreateModule">
    <MatDialog @bind-IsOpen="moduledialogIsOpen">
        <MatDialogTitle>Add Module</MatDialogTitle>
        <MatDialogContent Style="width: 500px;right:50px">
            <div class="form-group row">
                <label for="semester">Semester</label>
            </div>
            <div class="col-sm-10">
                <InputSelect id="semester" @bind-Value="SemesterId" class="form-control">
                    @foreach (var sem in Semesters)
                    {
                        <option value="@sem.SemesterId">@sem.GetAbbreviation()</option>
                    }
                </InputSelect>
            </div>
            <div class="form-group row">
                <label for="semester">Module Name</label>
            </div>
            <div class="col-sm-10">
                <InputSelect id="module" @bind-Value="ModuleId" class="form-control">
                    @foreach (var module in Modules)
                    {
                        <option value="@module.ModuleId">@module.ModuleId | @module.Title</option>
                    }
                </InputSelect>
            </div>

        </MatDialogContent>
        <div class="btn-group">
            <button type="submit" class="btn-btn-success">
                Add Module
            </button>
        </div>
    </MatDialog>
</EditForm>






@**test js*@
@*<div id="accordion">
        <h3>Asp.net</h3>
        <div>
            <p>
                Microsoft ASP.NET is a set of technologies....
            </p>
        </div>
        <h3>Asp.NET.MVC</h3>
        <div>
            <p>
                Microsoft ASP.NET is a set of technologies....
            </p>
        </div>
        <h3>JavaScript</h3>
        <div>
            <p>
                Microsoft ASP.NET is a set of technologies....
            </p>
        </div>
    </div>

    <div class="jquery-btn">
        <button>Click Me</button>
    </div>

    <br />
    <p>Clicked: <span class="click-count">0</span></p>

    <br />*@

@* other test *@



@code {
    
        #region variables


        #endregion


        /// <summary>
            /// js code for button
            ///
      ///  </summary>

        protected override async void OnAfterRender(bool firstRender)
        {
        await js.InvokeVoidAsync("renderjQueryComponents");
        base.OnAfterRender(firstRender);

        }

        private async Task CallJSMethod()
        {

        //await JS.InvokeVoidAsync("CollapseTableRow");
        await js.InvokeVoidAsync("GetName");

        }
        private async Task CallJSMethod2()
        {
        await js.InvokeVoidAsync("SetButtonsVisible");
        }

        public void EditEvent()
        {

        }

        #region Last Year Plan

        #endregion
        #region Dialog Box Methods for Last Year Plan
        bool _isDelete = false;
        bool dialogIsOpen = false;
        bool _isEdit = false;
        private void OpenDialog(bool isEdit)
        {

        //if (!_isEdit) plan = new Plan();
        dialogIsOpen = true;
        }
        private void okCklick()
        {
        dialogIsOpen = false;

        }
        private void CloseDialog()
        {
        dialogIsOpen = false;

        }
        #endregion
        #region New Module
        bool moduledialogIsOpen = false;
        private void OpenModuleDialog(bool isEdit)
        {
        moduledialogIsOpen = true;
        }

        private void moduleOkClick()
        {
        moduledialogIsOpen = false;
        }
        private async Task CreateModule()
        {


        await AddNewModule();
        moduledialogIsOpen = false;
        }
        #endregion


        }

        <style>
            /*.table {
                font-family: 'ArialMT', 'Arial';
                font-weight: 400;
                font-style: normal;
                font-size: 13px;
                letter-spacing: normal;
                color: #333333;
                vertical-align: none;
                text-align: center;
                line-height: normal;
                text-transform: none;
            }

                .table th {*/
                    /*padding: 2px;*/
                    /*text-align: left;
                }

                .table tr {
                }

                .table td {
                    text-align: center;
                }

                .table tr:hover {
                    background-color: #d1cfcf;
                }


            .btn {
                background-color: white;
                border: none;
                padding: 3px 4px;
                font-size: 9px;
                cursor: pointer;
            }

            #del {
                color: #d24141;
            }

            #add {
                color: #1919aa
            }

            #delete-btn, #save-btn, #cancel-btn {
                display: none;
            }*/
            /* Darker background on mouse-over */
            /*.btn:hover {
                background-color: #b2acb2;
            }

            #scroll td {
                width: 500px;
                height: 300px;
                overflow: auto;
            }*/
        </style>
