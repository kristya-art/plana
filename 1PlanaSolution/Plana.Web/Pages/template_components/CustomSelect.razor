@using Plana.Shared
@page "/customSelect"
@*<EditForm Model="@Plan">*@
@if (Plans == null)
{ return; }
<div class="selectYear">
    <form>
        <select class="form-control" @bind="SelectedPlanId">

            @foreach (var plan in Plans)
            {
                <option value="@plan.Id">@plan.Year</option>
            }
        </select>
        <div class="btn-group">
            <button @onclick="NavigateToModulesPlanPage">
                show plan
                

            </button>
           
        </div>
    </form>

    
</div>


    @code {

        [Inject]
        public NavigationManager NavManager { get; set; }
        [Inject]
        public IPlanService PlanService { get; set; }
        [Parameter]
        public PlanDto Plan { get; set; }

        public List<PlanDto> Plans { get; set; }

        public int? SelectedPlanId { get; set; }
        
       

        protected async override Task OnInitializedAsync()
        {
          
            Plans = (await PlanService.GetPlans()).ToList();
            SelectedPlanId = Plans.FirstOrDefault()?.Id; 
        }
        //#region method
        public void NavigateToModulesPlanPage()
        {
            
            NavManager.NavigateTo($"/editplan/{SelectedPlanId}", true);
          
        }

        //#endregion

        // for last year plan
        /// <summary>
        /// this method
        /// opens a new tab targeting the component that we want opened separate from the current location
        /// </summary>
        /// <param name="url"></param>
        /// <returns></returns>
        @*@inject IJSRuntime JSRuntime

            public async Task OpenInNewTab(string url)
            {
             // string url = "https://localhost:44340/home";

                await JSRuntime.InvokeAsync<object>("open", url, "_blank");
            }*@
    }

    <style>
        form {
            padding: 2px;
        }

        input {
            /* And hide the input's outline, so the form looks like the outline */
            border: none;
        }


       
        /* Add a background color on hover */
        .btn-group button:hover {
            /*background-color:azure;*/
            color: goldenrod;
        }

       /* .customS {
            /* display: table-cell;
            vertical-align: middle;
            height: 50px;
            border: 1px solid #354496;
                }*/


           .selectYear{
            border-width: 0px;
            position: absolute;
            left: 500px;
            top: 41px;
            width: 177px;
            height: 37px;
            display: flex;
            color: #000000;
            text-align: left;
        }

        .show-button {
        }
    </style>
