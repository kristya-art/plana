@page "/semester"
@using MatBlazor

@if (Semesters == null)
{ return; }
<MatButton>Add</MatButton>
<MatButton Outlined="true" Disabled="false">Outlined</MatButton>


<MatTable Items="@Semesters" class="mat-elevation-z5"
          
          FilterByColumnName="Name">
    <MatTableHeader>
        <th>Id</th>
        <th>Code</th>
        <th>Date</th>
        <th>Module Run Code</th>
        <th>Name of Lecturers</th>

    </MatTableHeader>
    <MatTableRow>
        @*@foreach (var semester in semesters)
        {*@
            @*<td>@semester.SemesterId</td>
            <td>@semester.Code</td>
            <td>@semester.Date</td>*@

            <td>@context.SemesterId</td>
            <td>@context.Code</td>
            <td>@context.Date</td>
        @foreach (var moduleRun in context.ModuleRuns)
        { 
        <td>@moduleRun.Code</td>
        }
        @foreach (var lm in context.LecturersSemesters)

        {
            <td>@lm.Lecturer.LastName</td>
        }



     @*   }*@
    </MatTableRow>

</MatTable>

<table class="table table-sm table-bordered table-striped">
    <thead>
        <tr>
            <th>Date</th>
            <th>Code</th>
        </tr>
    </thead>

    <tbody>
        @foreach (var s in Semesters)
        {
        <tr>
            <td>@s.Date</td>
        </tr>
                @foreach (var moduleRun in s.ModuleRuns)
                {
        <tr>

            <td>@moduleRun.Code</td>
        </tr>

                }
        }

    </tbody>
</table>


@code
        {

    [Inject]
    public ISemesterService semesterService { get; set; }

    [Inject]
    public IModuleRunService moduleRunService { get; set; }

    public string Id { get;set; }
    public IEnumerable<Semester> Semesters { get; set; }
    public Semester Semester { get; set; }

    //   public IEnumerable<ModuleRun> moduleRuns { get; set; }
    //  public ModuleRun moduleRun { get; set; }


    protected override async Task OnInitializedAsync()
    {
        Id = Id ?? "1";
        Semesters = (await semesterService.GetSemesters()).ToList();
        Semester = (await semesterService.GetSemester(int.Parse(Id)));

        //moduleRuns = (await moduleRunService.GetModuleRuns()).ToList();
        //moduleRun = (await moduleRunService.GetModuleRun(int.Parse(Id)));

        
    }


}
