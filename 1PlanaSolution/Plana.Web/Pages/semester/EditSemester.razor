@page "/editsemester/{Id}"
@page "/editsemester"
@using MatBlazor;

@inherits EditSemesterBase
@if (Semesters == null || Semester == null) { return; }
<!--<MatAppBarContainer>
    <MatAppBar Fixed="true">
        <MatAppBarRow>
            <MatAppBarSection>
                <MatIconButton Icon="menu"></MatIconButton>
                <MatAppBarTitle>Plan for @Semester.Code</MatAppBarTitle>
            </MatAppBarSection>
            <MatAppBarSection Align="@MatAppBarSectionAlign.End">-->
                @*<MatIconButton Icon="favorite"></MatIconButton>*@
                <!--<MatButton Outlined="true" @onclick="@(e=>openModules())">Modules view</MatButton>

            </MatAppBarSection>
        </MatAppBarRow>
    </MatAppBar>

    <MatAppBarContent>
        Content
    </MatAppBarContent>
</MatAppBarContainer>-->


<h2>
    @Semester.Code
</h2>
<EditForm Model="@Semester">
    <label for="code">Code</label>
    <InputText id="code" @bind-Value="Semester.Code" />
    @if (Semester.ModuleRuns == null) { return; }
    
    @foreach (var MR in Semester.ModuleRuns)
    {
        <label for="id">place</label>
        <InputText id="place" @bind-Value="MR.Place" />
    }
</EditForm>

<MatButton Outlined="true" @onclick="@(e=>openModules())">Modules view</MatButton>

@*<MatButoon Raised="true" @onclick="@(e=>showPlanforLecturers())" title="Edit Lecturers Plan"></MatButoon>*@

@if (showModuleRunTable)
{
    <MatTable Items="@Semester.ModuleRuns" class="mat-elevation-z5"
              FilterByColumnName="Module-Title">
        <MatTableHeader>

            <th>Module</th>
            <th>Module-Title</th>
            <th>Group</th>
            <th>Place</th>
            <th>Total Hours</th>
            <th>Lecturer</th>
            <th>Hours for concrete lecturer</th>
            <th>Lect/Week-AS</th>
            <th>Lect/Week-SS</th>


        </MatTableHeader>
        <MatTableRow>



            @if (Semester.ModuleRuns == null) { return; }
            @foreach (var moduleRun in Semester.ModuleRuns)
            {

                <td>@moduleRun.Module.Code</td>
                <td>@moduleRun.Module.Title</td>
                <td>@moduleRun.Code</td>
                <td>@moduleRun.Place</td>
                <td>@moduleRun.Module.TotalHours</td>
                <MatTable Items="@moduleRun.LecturersMR">

                    <MatTableHeader>
                        <th>First Name</th>
                    </MatTableHeader>
                    <MatTableRow Context="lecturer">
                        @foreach (var mr in moduleRun.LecturersMR)
                        { 
                            <td>@mr.Lecturer.FirstName</td>
                        }
                    </MatTableRow>
                </MatTable>
                @*@if (moduleRun.LecturersMR == null) { return; }*@

                @*@foreach (var mr in moduleRun.LecturersMR) { 
                    
                    
                    <td>@mr.Lecturer.FirstName</td>
                    <td>200</td>
                    <td>@mr.Lessons</td>
                    <td></td>

                    

            }*@

                @foreach (var aa in Semester.AdditionalAssignments) { 
                            <td>@aa.AAHours</td>
                }



            }


        </MatTableRow>
    </MatTable>

}
<MatButton OnClick="BackHome">Back</MatButton>

@code {
    #region Variables
    bool dialogIsOpen = false;
    bool _isEdit = false;

    bool showModuleRunTable = false;

    #endregion

    #region dialog box methods

    private void openDialog(bool isEdit)
    {
        if (!_isEdit) Semester = new Semester();
        dialogIsOpen = true;
    }
    public bool openModules()
    {
        return showModuleRunTable = true;
    }

    #endregion




    public void BackHome()
    {
        NavigationManager.NavigateTo("/home");
    }






    //}
}
