@page "/home"
@using MatBlazor;
<h2>Welcome to PLANA</h2>



<style>
    .app-fab--absolute {
        position: fixed;
        bottom: 1rem;
        right: 1rem;
    }
</style>

@*<MatFAB Class="@(isAbsolute ? "app-fab--absolute" : "")" Icon="@MatIconNames.Favorite" Label="Absolute Position" OnClick="@(_ => GoToAbsolute())"></MatFAB>

    <MatFAB Icon="@MatIconNames.Favorite"></MatFAB>

    <MatFAB Icon="@MatIconNames.Favorite" Label="Add to favorites"></MatFAB>

    <MatFAB Label="Custom Icon">
        <MatIcon>favorite</MatIcon>
    </MatFAB>*@

@if (Semesters == null)
{ return; }
 
<MatButton Outlined="true" @onclick="@(e=>OpenDialog(false))">Add Semester</MatButton>

<MatFAB Icon="@MatIconNames.Favorite" Label="Mini" Mini="true"></MatFAB>

@foreach (var semester in Semesters)
{

    <MatFAB Icon="@MatIconNames.Add" Label="@semester.Code">
        <a href="@($"/editsemester/{semester.SemesterId}")">Plan for</a>
    </MatFAB>

}
<MatFAB Icon="@MatIconNames.Add" Label="">
    <a href="@($"/createsemester")">Add </a>
</MatFAB>

<MatDialog @bind-IsOpen="dialogIsOpen">
    <MatDialogTitle>Add / Edit Semester</MatDialogTitle> 
</MatDialog>


@code
        {
    #region variables
    bool _isEdit = false;
    bool dialogIsOpen = false;

    #endregion

    [Inject]
    public ISemesterService semesterService { get; set; }

    public string Id { get; set; }
    public IEnumerable<Semester> Semesters { get; set; }
    public Semester Semester { get; set; }



    protected override async Task OnInitializedAsync()
    {
        Id = Id ?? "1";
        Semesters = (await semesterService.GetSemesters()).ToList();
        Semester = (await semesterService.GetSemester(int.Parse(Id)));



    }

    bool isAbsolute = false;

    void GoToAbsolute()
    {
        isAbsolute = !isAbsolute;
    }


    #region Dialog Box methods
    private void OpenDialog(bool isEdit)
    {
        _isEdit = isEdit;
        if (!_isEdit) Semester = new Semester();
        dialogIsOpen = true;
    }
    #endregion

}